# Kill snap
# For some reason /var/snap/firefox/common/host-hunspell is a read-only mount which will block the
# purge, hence we have to unmount it first.
sudo umount /var/snap/firefox/common/host-hunspell
sudo apt-get purge snapd
# We don't want Ubuntu to install snap with the next update.
sudo apt-mark hold snapd
# However, that is not enough to prevent snap from being installed. We follow what Linux Mint does
# and create a preference for APT.
cat <<EOF | sudo tee /etc/apt/preferences.d/nosnap.pref > /dev/null
# To prevent repository packages from triggering the installation of Snap,
# this file forbids snapd from being installed by APT.
# For more information: https://linuxmint-user-guide.readthedocs.io/en/latest/snap.html

Package: snapd
Pin: release a=*
Pin-Priority: -10
EOF
# Unmount host-hunspell once again to ensure it is definitely gone
sudo umount /var/snap/firefox/common/host-hunspell
# Cleanup files
sudo rm -rf /var/snap
sudo rm -rf $HOME/snap

# Install Firefox
# Since we have uninstalled snap we do not have Firefox anymore. We install it manually.
pushd /tmp > /dev/null
wget -q -O firefox-latest.tar.bz2 "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-GB"
tar -xf firefox-latest.tar.bz2
sudo mv firefox /usr/local/bin/
popd > /dev/null

cat <<EOF | sudo tee /etc/profile.d/firefox.sh > /dev/null
export PATH="/usr/local/bin/firefox:$PATH"
EOF
sudo chmod +x /etc/profile.d/firefox.sh
source /etc/profile.d/firefox.sh

# Set up locale
localectl set-locale LANG=en_GB.UTF-8
localectl set-locale LC_TIME=en_NZ.utf-8

sudo apt-get -y install vim curl git git-lfs mpv ninja-build cmake meson zathura nomacs \
                        python3-pip htop pandoc flameshot

# Set up the $HOME/bin directory
mkdir -p $HOME/bin

# Download the scripts
pushd $HOME/bin > /dev/null
wget -q -O mexican-mode https://raw.githubusercontent.com/kociap/ubuntu-utilities/master/mexican-mode
chmod +x mexican-mode
popd > /dev/null

source $HOME/.profile

# Initialise mexican mode defaults
mexican-mode -i

# Alias python
sudo ln -s /usr/bin/python3 /usr/bin/python

# Set theme to dark and olive (green)
gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
gsettings set org.gnome.desktop.interface gtk-theme 'Yaru-olive-dark'
gsettings set org.gnome.desktop.interface icon-theme 'Yaru-olive'

# Set blank screen delay to 900 seconds (15 minutes)
gsettings set org.gnome.desktop.session idle-delay 900

# Setup keyboard and mouse
gsettings set org.gnome.desktop.peripherals.mouse accel-profile "flat"
gsettings set org.gnome.desktop.peripherals.mouse speed 0.0
gsettings set org.gnome.desktop.peripherals.keyboard delay 300

# Remove workspace keybinds as they interfere with the vscode keybinds
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-down []
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-up []
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-left []
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-right []
gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-last []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-last []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-left []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-right []
gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-up []

# Setup Flameshot keybind
gsettings set org.gnome.shell.keybindings show-screenshot-ui []
gsettings set org.gnome.shell.keybindings screenshot-window []
gsettings set org.gnome.shell.keybindings screenshot []
gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name "flameshot"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command "flameshot gui"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding "Print"

# Add repositories
## LLVM and Clang
source /etc/os-release
wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/llvm.asc > /dev/null
echo "deb [arch=amd64] http://apt.llvm.org/${UBUNTU_CODENAME}/ llvm-toolchain-${UBUNTU_CODENAME} main" | sudo tee /etc/apt/sources.list.d/llvm.list > /dev/null
## VSCode
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc > /dev/null
echo "deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main" | sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null

# Install LLVM, Clang, VSCode
sudo apt-get update
sudo apt-get -y install code llvm clang clangd clang-format clang-tidy clang-tools lld

# Download vscode user settings and keybinds
mkdir -p $HOME/.config/Code/User
pushd $HOME/.config/Code/User > /dev/null
wget -q -O keybindings.json https://raw.githubusercontent.com/kociap/ubuntu-utilities/master/keybindings.json
wget -q -O settings.json https://raw.githubusercontent.com/kociap/ubuntu-utilities/master/settings.json
popd > /dev/null

# Final upgrade and cleanup
sudo apt-get -y upgrade
sudo apt-get -y autoremove
